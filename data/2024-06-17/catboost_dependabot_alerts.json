[
    {
        "number": 10,
        "state": "open",
        "dependency": {
            "package": {
                "ecosystem": "rust",
                "name": "atty"
            },
            "manifest_path": "catboost/tutorials/apply_model/rust/Cargo.lock",
            "scope": "runtime"
        },
        "security_advisory": {
            "ghsa_id": "GHSA-g98v-hv3f-hcfr",
            "cve_id": null,
            "summary": "atty potential unaligned read",
            "description": "On windows, `atty` dereferences a potentially unaligned pointer.\n\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\n\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\n\n# atty is Unmaintained\n\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\n\nLast release of `atty` was almost 3 years ago.\n\n## Possible Alternative(s)\n\nThe below list has not been vetted in any way and may or may not contain alternatives;\n\n- [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0\n- [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\"\n",
            "severity": "low",
            "identifiers": [
                {
                    "value": "GHSA-g98v-hv3f-hcfr",
                    "type": "GHSA"
                }
            ],
            "references": [
                {
                    "url": "https://github.com/softprops/atty/issues/50"
                },
                {
                    "url": "https://github.com/softprops/atty/pull/51"
                },
                {
                    "url": "https://rustsec.org/advisories/RUSTSEC-2021-0145.html"
                },
                {
                    "url": "https://github.com/advisories/GHSA-g98v-hv3f-hcfr"
                }
            ],
            "published_at": "2023-06-30T20:21:59Z",
            "updated_at": "2024-02-14T17:42:45Z",
            "withdrawn_at": null,
            "vulnerabilities": [
                {
                    "package": {
                        "ecosystem": "rust",
                        "name": "atty"
                    },
                    "severity": "low",
                    "vulnerable_version_range": "<= 0.2.14",
                    "first_patched_version": null
                }
            ],
            "cvss": {
                "vector_string": null,
                "score": 0.0
            },
            "cwes": []
        },
        "security_vulnerability": {
            "package": {
                "ecosystem": "rust",
                "name": "atty"
            },
            "severity": "low",
            "vulnerable_version_range": "<= 0.2.14",
            "first_patched_version": null
        },
        "url": "https://api.github.com/repos/username/catboost/dependabot/alerts/10",
        "html_url": "https://github.com/username/catboost/security/dependabot/10",
        "created_at": "2024-05-20T17:41:52Z",
        "updated_at": "2024-05-20T17:41:52Z",
        "dismissed_at": null,
        "dismissed_by": null,
        "dismissed_reason": null,
        "dismissed_comment": null,
        "fixed_at": null,
        "auto_dismissed_at": null
    },
    {
        "number": 9,
        "state": "open",
        "dependency": {
            "package": {
                "ecosystem": "maven",
                "name": "org.xerial.snappy:snappy-java"
            },
            "manifest_path": "catboost/spark/catboost4j-spark/generate_projects/core/pom.xml",
            "scope": "runtime"
        },
        "security_advisory": {
            "ghsa_id": "GHSA-55g7-9cwv-5qfv",
            "cve_id": "CVE-2023-43642",
            "summary": "snappy-java's missing upper bound check on chunk length can lead to Denial of Service (DoS) impact",
            "description": "### Summary\n\nsnappy-java is a data compression library in Java. Its SnappyInputStream was found to be vulnerable to Denial of Service (DoS) attacks when decompressing data with a too-large chunk size. Due to missing upper bound check on chunk length, an unrecoverable fatal error can occur. \n\n### Scope\n\nAll versions of snappy-java including the latest released version 1.1.10.3.  A fix is applied in 1.1.10.4\n\n### Details\nWhile performing mitigation efforts related to [CVE-2023-34455](https://nvd.nist.gov/vuln/detail/CVE-2023-34455) in Confluent products, our Application Security team closely analyzed the fix that was accepted and merged into snappy-java version 1.1.10.1 in [this](https://github.com/xerial/snappy-java/commit/3bf67857fcf70d9eea56eed4af7c925671e8eaea) commit. The check on [line 421](https://github.com/xerial/snappy-java/commit/3bf67857fcf70d9eea56eed4af7c925671e8eaea#diff-c3e53610267092989965e8c7dd2d4417d355ff7f560f9e8075b365f32569079fR421) only attempts to check if chunkSize is not a negative value. We believe that this is an inadequate fix as it misses an upper-bounds check for overly positive values such as 0x7FFFFFFF (or (2,147,483,647 in decimal) before actually [attempting to allocate](https://github.com/xerial/snappy-java/commit/3bf67857fcf70d9eea56eed4af7c925671e8eaea#diff-c3e53610267092989965e8c7dd2d4417d355ff7f560f9e8075b365f32569079fR429) the provided unverified number of bytes via the “chunkSize” variable. This missing upper-bounds check can lead to the applications depending upon snappy-java to allocate an inappropriate number of bytes on the heap which can then cause an  java.lang.OutOfMemoryError exception. Under some specific conditions and contexts, this can lead to a Denial-of-Service (DoS) attack with a direct impact on the availability of the dependent implementations based on the usage of the snappy-java library for compression/decompression needs.\n\n### PoC\nCompile and run the following code:\n```\npackage org.example;\nimport org.xerial.snappy.SnappyInputStream;\n\nimport java.io.*;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        byte[] data = {-126, 'S', 'N', 'A', 'P', 'P', 'Y', 0, 0, 0, 0, 0, 0, 0, 0, 0,(byte) 0x7f, (byte) 0xff, (byte) 0xff, (byte) 0xff};\n        SnappyInputStream in = new SnappyInputStream(new ByteArrayInputStream(data));\n        byte[] out = new byte[50];\n        try {\n            in.read(out);\n        }\n        catch (Exception ignored) {\n        }\n    }\n}\n```\n\n### Impact\nDenial of Service of applications dependent on snappy-java especially if `ExitOnOutOfMemoryError` or `CrashOnOutOfMemoryError` is configured on the JVM.\n\n### Credits\nJan Werner, Mukul Khullar and Bharadwaj Machiraju from Confluent's Application Security team. \n\nWe kindly request for a new CVE ID to be assigned once you acknowledge this vulnerability.",
            "severity": "high",
            "identifiers": [
                {
                    "value": "GHSA-55g7-9cwv-5qfv",
                    "type": "GHSA"
                },
                {
                    "value": "CVE-2023-43642",
                    "type": "CVE"
                }
            ],
            "references": [
                {
                    "url": "https://github.com/xerial/snappy-java/security/advisories/GHSA-55g7-9cwv-5qfv"
                },
                {
                    "url": "https://github.com/xerial/snappy-java/commit/9f8c3cf74223ed0a8a834134be9c917b9f10ceb5"
                },
                {
                    "url": "https://github.com/xerial/snappy-java/releases/tag/v1.1.10.4"
                },
                {
                    "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-43642"
                },
                {
                    "url": "https://github.com/advisories/GHSA-55g7-9cwv-5qfv"
                }
            ],
            "published_at": "2023-09-25T18:30:18Z",
            "updated_at": "2023-11-07T05:05:02Z",
            "withdrawn_at": null,
            "vulnerabilities": [
                {
                    "package": {
                        "ecosystem": "maven",
                        "name": "org.xerial.snappy:snappy-java"
                    },
                    "severity": "high",
                    "vulnerable_version_range": "<= 1.1.10.3",
                    "first_patched_version": {
                        "identifier": "1.1.10.4"
                    }
                }
            ],
            "cvss": {
                "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                "score": 7.5
            },
            "cwes": [
                {
                    "cwe_id": "CWE-770",
                    "name": "Allocation of Resources Without Limits or Throttling"
                }
            ]
        },
        "security_vulnerability": {
            "package": {
                "ecosystem": "maven",
                "name": "org.xerial.snappy:snappy-java"
            },
            "severity": "high",
            "vulnerable_version_range": "<= 1.1.10.3",
            "first_patched_version": {
                "identifier": "1.1.10.4"
            }
        },
        "url": "https://api.github.com/repos/username/catboost/dependabot/alerts/9",
        "html_url": "https://github.com/username/catboost/security/dependabot/9",
        "created_at": "2024-05-20T17:41:52Z",
        "updated_at": "2024-05-20T17:41:52Z",
        "dismissed_at": null,
        "dismissed_by": null,
        "dismissed_reason": null,
        "dismissed_comment": null,
        "fixed_at": null,
        "auto_dismissed_at": null
    },
    {
        "number": 8,
        "state": "open",
        "dependency": {
            "package": {
                "ecosystem": "rust",
                "name": "shlex"
            },
            "manifest_path": "catboost/rust-package/catboost-sys/Cargo.lock",
            "scope": "runtime"
        },
        "security_advisory": {
            "ghsa_id": "GHSA-r7qv-8r2h-pg27",
            "cve_id": null,
            "summary": "Multiple issues involving quote API in shlex",
            "description": "## Issue 1: Failure to quote characters\n\nAffected versions of this crate allowed the bytes `{` and `\\xa0` to appear\nunquoted and unescaped in command arguments.\n\nIf the output of `quote` or `join` is passed to a shell, then what should be a\nsingle command argument could be interpreted as multiple arguments.\n\nThis does not *directly* allow arbitrary command execution (you can't inject a\ncommand substitution or similar).  But depending on the command you're running,\nbeing able to inject multiple arguments where only one is expected could lead\nto undesired consequences, potentially including arbitrary command execution.\n\nThe flaw was corrected in version 1.2.1 by escaping additional characters.\nUpdating to 1.3.0 is recommended, but 1.2.1 offers a more minimal fix if\ndesired.\n\nWorkaround: Check for the bytes `{` and `\\xa0` in `quote`/`join` input or\noutput.\n\n(Note: `{` is problematic because it is used for glob expansion.  `\\xa0` is\nproblematic because it's treated as a word separator in [specific\nenvironments][solved-xa0].)\n\n## Issue 2: Dangerous API w.r.t. nul bytes\n\nVersion 1.3.0 deprecates the `quote` and `join` APIs in favor of `try_quote`\nand `try_join`, which behave the same except that they have `Result` return\ntype, returning `Err` if the input contains nul bytes.\n\nStrings containing nul bytes generally cannot be used in Unix command arguments\nor environment variables, and most shells cannot handle nul bytes even\ninternally.  If you try to pass one anyway, then the results might be\nsecurity-sensitive in uncommon scenarios.  [More details here.][nul-bytes]\n\nDue to the low severity, the behavior of the original `quote` and `join` APIs\nhas not changed; they continue to allow nuls.\n\nWorkaround: Manually check for nul bytes in `quote`/`join` input or output.\n\n## Issue 3: Lack of documentation for interactive shell risks\n\nThe `quote` family of functions does not and cannot escape control characters.\nWith non-interactive shells this is perfectly safe, as control characters have\nno special effect.  But if you writing directly to the standard input of an\ninteractive shell (or through a pty), then control characters [can cause\nmisbehavior including arbitrary command injection.][control-characters]\n\nThis is essentially unfixable, and has not been patched.  But as of version\n1.3.0, documentation has been added.\n\nFuture versions of `shlex` may add API variants that avoid the issue at the\ncost of reduced portability.\n\n[solved-xa0]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#solved-xa0\n[nul-bytes]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#nul-bytes\n[control-characters]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#control-characters-interactive-contexts-only",
            "severity": "high",
            "identifiers": [
                {
                    "value": "GHSA-r7qv-8r2h-pg27",
                    "type": "GHSA"
                }
            ],
            "references": [
                {
                    "url": "https://github.com/comex/rust-shlex/security/advisories/GHSA-r7qv-8r2h-pg27"
                },
                {
                    "url": "https://rustsec.org/advisories/RUSTSEC-2024-0006.html"
                },
                {
                    "url": "https://github.com/advisories/GHSA-r7qv-8r2h-pg27"
                }
            ],
            "published_at": "2024-01-22T21:21:30Z",
            "updated_at": "2024-01-22T21:21:30Z",
            "withdrawn_at": null,
            "vulnerabilities": [
                {
                    "package": {
                        "ecosystem": "rust",
                        "name": "shlex"
                    },
                    "severity": "high",
                    "vulnerable_version_range": "< 1.3.0",
                    "first_patched_version": {
                        "identifier": "1.3.0"
                    }
                }
            ],
            "cvss": {
                "vector_string": null,
                "score": 0.0
            },
            "cwes": []
        },
        "security_vulnerability": {
            "package": {
                "ecosystem": "rust",
                "name": "shlex"
            },
            "severity": "high",
            "vulnerable_version_range": "< 1.3.0",
            "first_patched_version": {
                "identifier": "1.3.0"
            }
        },
        "url": "https://api.github.com/repos/username/catboost/dependabot/alerts/8",
        "html_url": "https://github.com/username/catboost/security/dependabot/8",
        "created_at": "2024-05-20T17:41:52Z",
        "updated_at": "2024-05-20T17:41:52Z",
        "dismissed_at": null,
        "dismissed_by": null,
        "dismissed_reason": null,
        "dismissed_comment": null,
        "fixed_at": null,
        "auto_dismissed_at": null
    },
    {
        "number": 7,
        "state": "open",
        "dependency": {
            "package": {
                "ecosystem": "rust",
                "name": "atty"
            },
            "manifest_path": "catboost/rust-package/catboost-sys/Cargo.lock",
            "scope": "runtime"
        },
        "security_advisory": {
            "ghsa_id": "GHSA-g98v-hv3f-hcfr",
            "cve_id": null,
            "summary": "atty potential unaligned read",
            "description": "On windows, `atty` dereferences a potentially unaligned pointer.\n\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\n\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\n\n# atty is Unmaintained\n\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\n\nLast release of `atty` was almost 3 years ago.\n\n## Possible Alternative(s)\n\nThe below list has not been vetted in any way and may or may not contain alternatives;\n\n- [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0\n- [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\"\n",
            "severity": "low",
            "identifiers": [
                {
                    "value": "GHSA-g98v-hv3f-hcfr",
                    "type": "GHSA"
                }
            ],
            "references": [
                {
                    "url": "https://github.com/softprops/atty/issues/50"
                },
                {
                    "url": "https://github.com/softprops/atty/pull/51"
                },
                {
                    "url": "https://rustsec.org/advisories/RUSTSEC-2021-0145.html"
                },
                {
                    "url": "https://github.com/advisories/GHSA-g98v-hv3f-hcfr"
                }
            ],
            "published_at": "2023-06-30T20:21:59Z",
            "updated_at": "2024-02-14T17:42:45Z",
            "withdrawn_at": null,
            "vulnerabilities": [
                {
                    "package": {
                        "ecosystem": "rust",
                        "name": "atty"
                    },
                    "severity": "low",
                    "vulnerable_version_range": "<= 0.2.14",
                    "first_patched_version": null
                }
            ],
            "cvss": {
                "vector_string": null,
                "score": 0.0
            },
            "cwes": []
        },
        "security_vulnerability": {
            "package": {
                "ecosystem": "rust",
                "name": "atty"
            },
            "severity": "low",
            "vulnerable_version_range": "<= 0.2.14",
            "first_patched_version": null
        },
        "url": "https://api.github.com/repos/username/catboost/dependabot/alerts/7",
        "html_url": "https://github.com/username/catboost/security/dependabot/7",
        "created_at": "2024-05-20T17:41:51Z",
        "updated_at": "2024-05-20T17:41:51Z",
        "dismissed_at": null,
        "dismissed_by": null,
        "dismissed_reason": null,
        "dismissed_comment": null,
        "fixed_at": null,
        "auto_dismissed_at": null
    },
    {
        "number": 6,
        "state": "open",
        "dependency": {
            "package": {
                "ecosystem": "rust",
                "name": "shlex"
            },
            "manifest_path": "catboost/rust-package/Cargo.lock",
            "scope": "runtime"
        },
        "security_advisory": {
            "ghsa_id": "GHSA-r7qv-8r2h-pg27",
            "cve_id": null,
            "summary": "Multiple issues involving quote API in shlex",
            "description": "## Issue 1: Failure to quote characters\n\nAffected versions of this crate allowed the bytes `{` and `\\xa0` to appear\nunquoted and unescaped in command arguments.\n\nIf the output of `quote` or `join` is passed to a shell, then what should be a\nsingle command argument could be interpreted as multiple arguments.\n\nThis does not *directly* allow arbitrary command execution (you can't inject a\ncommand substitution or similar).  But depending on the command you're running,\nbeing able to inject multiple arguments where only one is expected could lead\nto undesired consequences, potentially including arbitrary command execution.\n\nThe flaw was corrected in version 1.2.1 by escaping additional characters.\nUpdating to 1.3.0 is recommended, but 1.2.1 offers a more minimal fix if\ndesired.\n\nWorkaround: Check for the bytes `{` and `\\xa0` in `quote`/`join` input or\noutput.\n\n(Note: `{` is problematic because it is used for glob expansion.  `\\xa0` is\nproblematic because it's treated as a word separator in [specific\nenvironments][solved-xa0].)\n\n## Issue 2: Dangerous API w.r.t. nul bytes\n\nVersion 1.3.0 deprecates the `quote` and `join` APIs in favor of `try_quote`\nand `try_join`, which behave the same except that they have `Result` return\ntype, returning `Err` if the input contains nul bytes.\n\nStrings containing nul bytes generally cannot be used in Unix command arguments\nor environment variables, and most shells cannot handle nul bytes even\ninternally.  If you try to pass one anyway, then the results might be\nsecurity-sensitive in uncommon scenarios.  [More details here.][nul-bytes]\n\nDue to the low severity, the behavior of the original `quote` and `join` APIs\nhas not changed; they continue to allow nuls.\n\nWorkaround: Manually check for nul bytes in `quote`/`join` input or output.\n\n## Issue 3: Lack of documentation for interactive shell risks\n\nThe `quote` family of functions does not and cannot escape control characters.\nWith non-interactive shells this is perfectly safe, as control characters have\nno special effect.  But if you writing directly to the standard input of an\ninteractive shell (or through a pty), then control characters [can cause\nmisbehavior including arbitrary command injection.][control-characters]\n\nThis is essentially unfixable, and has not been patched.  But as of version\n1.3.0, documentation has been added.\n\nFuture versions of `shlex` may add API variants that avoid the issue at the\ncost of reduced portability.\n\n[solved-xa0]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#solved-xa0\n[nul-bytes]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#nul-bytes\n[control-characters]: https://docs.rs/shlex/latest/shlex/quoting_warning/index.html#control-characters-interactive-contexts-only",
            "severity": "high",
            "identifiers": [
                {
                    "value": "GHSA-r7qv-8r2h-pg27",
                    "type": "GHSA"
                }
            ],
            "references": [
                {
                    "url": "https://github.com/comex/rust-shlex/security/advisories/GHSA-r7qv-8r2h-pg27"
                },
                {
                    "url": "https://rustsec.org/advisories/RUSTSEC-2024-0006.html"
                },
                {
                    "url": "https://github.com/advisories/GHSA-r7qv-8r2h-pg27"
                }
            ],
            "published_at": "2024-01-22T21:21:30Z",
            "updated_at": "2024-01-22T21:21:30Z",
            "withdrawn_at": null,
            "vulnerabilities": [
                {
                    "package": {
                        "ecosystem": "rust",
                        "name": "shlex"
                    },
                    "severity": "high",
                    "vulnerable_version_range": "< 1.3.0",
                    "first_patched_version": {
                        "identifier": "1.3.0"
                    }
                }
            ],
            "cvss": {
                "vector_string": null,
                "score": 0.0
            },
            "cwes": []
        },
        "security_vulnerability": {
            "package": {
                "ecosystem": "rust",
                "name": "shlex"
            },
            "severity": "high",
            "vulnerable_version_range": "< 1.3.0",
            "first_patched_version": {
                "identifier": "1.3.0"
            }
        },
        "url": "https://api.github.com/repos/username/catboost/dependabot/alerts/6",
        "html_url": "https://github.com/username/catboost/security/dependabot/6",
        "created_at": "2024-05-20T17:41:51Z",
        "updated_at": "2024-05-20T17:41:51Z",
        "dismissed_at": null,
        "dismissed_by": null,
        "dismissed_reason": null,
        "dismissed_comment": null,
        "fixed_at": null,
        "auto_dismissed_at": null
    },
    {
        "number": 5,
        "state": "open",
        "dependency": {
            "package": {
                "ecosystem": "rust",
                "name": "atty"
            },
            "manifest_path": "catboost/rust-package/Cargo.lock",
            "scope": "runtime"
        },
        "security_advisory": {
            "ghsa_id": "GHSA-g98v-hv3f-hcfr",
            "cve_id": null,
            "summary": "atty potential unaligned read",
            "description": "On windows, `atty` dereferences a potentially unaligned pointer.\n\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\n\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\n\n# atty is Unmaintained\n\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\n\nLast release of `atty` was almost 3 years ago.\n\n## Possible Alternative(s)\n\nThe below list has not been vetted in any way and may or may not contain alternatives;\n\n- [std::io::IsTerminal](https://doc.rust-lang.org/stable/std/io/trait.IsTerminal.html) - Stable since Rust 1.70.0\n- [is-terminal](https://crates.io/crates/is-terminal) - Standalone crate supporting Rust older than 1.70.0\"\n",
            "severity": "low",
            "identifiers": [
                {
                    "value": "GHSA-g98v-hv3f-hcfr",
                    "type": "GHSA"
                }
            ],
            "references": [
                {
                    "url": "https://github.com/softprops/atty/issues/50"
                },
                {
                    "url": "https://github.com/softprops/atty/pull/51"
                },
                {
                    "url": "https://rustsec.org/advisories/RUSTSEC-2021-0145.html"
                },
                {
                    "url": "https://github.com/advisories/GHSA-g98v-hv3f-hcfr"
                }
            ],
            "published_at": "2023-06-30T20:21:59Z",
            "updated_at": "2024-02-14T17:42:45Z",
            "withdrawn_at": null,
            "vulnerabilities": [
                {
                    "package": {
                        "ecosystem": "rust",
                        "name": "atty"
                    },
                    "severity": "low",
                    "vulnerable_version_range": "<= 0.2.14",
                    "first_patched_version": null
                }
            ],
            "cvss": {
                "vector_string": null,
                "score": 0.0
            },
            "cwes": []
        },
        "security_vulnerability": {
            "package": {
                "ecosystem": "rust",
                "name": "atty"
            },
            "severity": "low",
            "vulnerable_version_range": "<= 0.2.14",
            "first_patched_version": null
        },
        "url": "https://api.github.com/repos/username/catboost/dependabot/alerts/5",
        "html_url": "https://github.com/username/catboost/security/dependabot/5",
        "created_at": "2024-05-20T17:41:51Z",
        "updated_at": "2024-05-20T17:41:51Z",
        "dismissed_at": null,
        "dismissed_by": null,
        "dismissed_reason": null,
        "dismissed_comment": null,
        "fixed_at": null,
        "auto_dismissed_at": null
    },
    {
        "number": 4,
        "state": "open",
        "dependency": {
            "package": {
                "ecosystem": "npm",
                "name": "tar"
            },
            "manifest_path": "catboost/python-package/catboost/widget/js/yarn.lock",
            "scope": "runtime"
        },
        "security_advisory": {
            "ghsa_id": "GHSA-f5x3-32g6-xq36",
            "cve_id": "CVE-2024-28863",
            "summary": "Denial of service while parsing a tar file due to lack of folders count validation",
            "description": "## Description: \nDuring some analysis today on npm's `node-tar` package I came across the folder creation process, Basicly if you provide node-tar with a path like this `./a/b/c/foo.txt` it would create every folder and sub-folder here a, b and c until it reaches the last folder to create `foo.txt`, In-this case I noticed that there's no validation at all on the amount of folders being created, that said we're actually able to CPU and memory consume the system running node-tar and even crash the nodejs client within few seconds of running it using a path with too many sub-folders inside\n\n## Steps To Reproduce:\nYou can reproduce this issue by downloading the tar file I provided in the resources and using node-tar to extract it, you should get the same behavior as the video\n\n## Proof Of Concept:\nHere's a [video](https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/3i7uojw8s52psar6pg8zkdo4h9io?response-content-disposition=attachment%3B%20filename%3D%22tar-dos-poc.webm%22%3B%20filename%2A%3DUTF-8%27%27tar-dos-poc.webm&response-content-type=video%2Fwebm&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQSWWGDXHA%2F20240312%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240312T080103Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEDcaCXVzLXdlc3QtMiJHMEUCID3xYDc6emXVPOg8iVR5dVk0u3gguTPIDJ0OIE%2BKxj17AiEAi%2BGiay1gGMWhH%2F031fvMYnSsa8U7CnpZpxvFAYqNRwgqsQUIQBADGgwwMTM2MTkyNzQ4NDkiDAaj6OgUL3gg4hhLLCqOBUUrOgWSqaK%2FmxN6nKRvB4Who3LIyzswFKm9LV94GiSVFP3zXYA480voCmAHTg7eBL7%2BrYgV2RtXbhF4aCFMCN3qu7GeXkIdH7xwVMi9zXHkekviSKZ%2FsZtVVjn7RFqOCKhJl%2FCoiLQJuDuju%2FtfdTGZbEbGsPgKHoILYbRp81K51zeRL21okjsOehmypkZzq%2BoGrXIX0ynPOKujxw27uqdF4T%2BF9ynodq01vGgwgVBEjHojc4OKOfr1oW5b%2FtGVV59%2BOBVI1hqIKHRG0Ed4SWmp%2BLd1hazGuZPvp52szmegnOj5qr3ubppnKL242bX%2FuAnQKzKK0HpwolqXjsuEeFeM85lxhqHV%2B1BJqaqSHHDa0HUMLZistMRshRlntuchcFQCR6HBa2c8PSnhpVC31zMzvYMfKsI12h4HB6l%2FudrmNrvmH4LmNpi4dZFcio21DzKj%2FRjWmxjH7l8egDyG%2FIgPMY6Ls4IiN7aR1jijYTrBCgPUUHets3BFvqLzHtPFnG3B7%2FYRPnhCLu%2FgzvKN3F8l38KqeTNMHJaxkuhCvEjpFB2SJbi2QZqZZbLj3xASqXoogzbsyPp0Tzp0tH7EKDhPA7H6wwiZukXfFhhlYzP8on9fO2Ajz%2F%2BTDkDjbfWw4KNJ0cFeDsGrUspqQZb5TAKlUge7iOZEc2TZ5uagatSy9Mg08E4nImBSE5QUHDc7Daya1gyqrETMDZBBUHH2RFkGA9qMpEtNrtJ9G%2BPedz%2FpPY1hh9OCp9Pg1BrX97l3SfVzlAMRfNibhywq6qnE35rVnZi%2BEQ1UgBjs9jD%2FQrW49%2FaD0oUDojVeuFFryzRnQxDbKtYgonRcItTvLT5Y0xaK9P0u6H1197%2FMk3XxmjD9%2Fb%2BvBjqxAQWWkKiIxpC1oHEWK9Jt8UdJ39xszDBGpBqjB6Tvt5ePAXSyX8np%2FrBi%2BAPx06O0%2Ba7pU4NmH800EVXxxhgfj9nMw3CeoUIdxorVKtU2Mxw%2FLaAiPgxPS4rqkt65NF7eQYfegcSYDTm2Z%2BHPbz9HfCaVZ28Zqeko6sR%2F29ML4bguqVvHAM4mWPLNDXH33mjG%2BuzLi8e1BF7tNveg2X9G%2FRdcMkojwKYbu6xN3M6aX2alQg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=1e8235d885f1d61529b7d6b23ea3a0780c300c91d86e925dd8310d5b661ddbe2) show-casing the exploit: \n\n## Impact\n\nDenial of service by crashing the nodejs client when attempting to parse a tar archive, make it run out of heap memory and consuming server CPU and memory resources\n\n## Report resources\n[payload.txt](https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/1e83ayb5dd3350fvj3gst0mqixwk?response-content-disposition=attachment%3B%20filename%3D%22payload.txt%22%3B%20filename%2A%3DUTF-8%27%27payload.txt&response-content-type=text%2Fplain&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQSWWGDXHA%2F20240312%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240312T080103Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEDcaCXVzLXdlc3QtMiJHMEUCID3xYDc6emXVPOg8iVR5dVk0u3gguTPIDJ0OIE%2BKxj17AiEAi%2BGiay1gGMWhH%2F031fvMYnSsa8U7CnpZpxvFAYqNRwgqsQUIQBADGgwwMTM2MTkyNzQ4NDkiDAaj6OgUL3gg4hhLLCqOBUUrOgWSqaK%2FmxN6nKRvB4Who3LIyzswFKm9LV94GiSVFP3zXYA480voCmAHTg7eBL7%2BrYgV2RtXbhF4aCFMCN3qu7GeXkIdH7xwVMi9zXHkekviSKZ%2FsZtVVjn7RFqOCKhJl%2FCoiLQJuDuju%2FtfdTGZbEbGsPgKHoILYbRp81K51zeRL21okjsOehmypkZzq%2BoGrXIX0ynPOKujxw27uqdF4T%2BF9ynodq01vGgwgVBEjHojc4OKOfr1oW5b%2FtGVV59%2BOBVI1hqIKHRG0Ed4SWmp%2BLd1hazGuZPvp52szmegnOj5qr3ubppnKL242bX%2FuAnQKzKK0HpwolqXjsuEeFeM85lxhqHV%2B1BJqaqSHHDa0HUMLZistMRshRlntuchcFQCR6HBa2c8PSnhpVC31zMzvYMfKsI12h4HB6l%2FudrmNrvmH4LmNpi4dZFcio21DzKj%2FRjWmxjH7l8egDyG%2FIgPMY6Ls4IiN7aR1jijYTrBCgPUUHets3BFvqLzHtPFnG3B7%2FYRPnhCLu%2FgzvKN3F8l38KqeTNMHJaxkuhCvEjpFB2SJbi2QZqZZbLj3xASqXoogzbsyPp0Tzp0tH7EKDhPA7H6wwiZukXfFhhlYzP8on9fO2Ajz%2F%2BTDkDjbfWw4KNJ0cFeDsGrUspqQZb5TAKlUge7iOZEc2TZ5uagatSy9Mg08E4nImBSE5QUHDc7Daya1gyqrETMDZBBUHH2RFkGA9qMpEtNrtJ9G%2BPedz%2FpPY1hh9OCp9Pg1BrX97l3SfVzlAMRfNibhywq6qnE35rVnZi%2BEQ1UgBjs9jD%2FQrW49%2FaD0oUDojVeuFFryzRnQxDbKtYgonRcItTvLT5Y0xaK9P0u6H1197%2FMk3XxmjD9%2Fb%2BvBjqxAQWWkKiIxpC1oHEWK9Jt8UdJ39xszDBGpBqjB6Tvt5ePAXSyX8np%2FrBi%2BAPx06O0%2Ba7pU4NmH800EVXxxhgfj9nMw3CeoUIdxorVKtU2Mxw%2FLaAiPgxPS4rqkt65NF7eQYfegcSYDTm2Z%2BHPbz9HfCaVZ28Zqeko6sR%2F29ML4bguqVvHAM4mWPLNDXH33mjG%2BuzLi8e1BF7tNveg2X9G%2FRdcMkojwKYbu6xN3M6aX2alQg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=bad9fe731f05a63a950f99828125653a8c1254750fe0ca7be882e89ecdd449ae)\n[archeive.tar.gz](https://hackerone-us-west-2-production-attachments.s3.us-west-2.amazonaws.com/ymkuh4xnfdcf1soeyi7jc2x4yt2i?response-content-disposition=attachment%3B%20filename%3D%22archive.tar.gz%22%3B%20filename%2A%3DUTF-8%27%27archive.tar.gz&response-content-type=application%2Fx-tar&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=ASIAQGK6FURQSWWGDXHA%2F20240312%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240312T080103Z&X-Amz-Expires=3600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjEDcaCXVzLXdlc3QtMiJHMEUCID3xYDc6emXVPOg8iVR5dVk0u3gguTPIDJ0OIE%2BKxj17AiEAi%2BGiay1gGMWhH%2F031fvMYnSsa8U7CnpZpxvFAYqNRwgqsQUIQBADGgwwMTM2MTkyNzQ4NDkiDAaj6OgUL3gg4hhLLCqOBUUrOgWSqaK%2FmxN6nKRvB4Who3LIyzswFKm9LV94GiSVFP3zXYA480voCmAHTg7eBL7%2BrYgV2RtXbhF4aCFMCN3qu7GeXkIdH7xwVMi9zXHkekviSKZ%2FsZtVVjn7RFqOCKhJl%2FCoiLQJuDuju%2FtfdTGZbEbGsPgKHoILYbRp81K51zeRL21okjsOehmypkZzq%2BoGrXIX0ynPOKujxw27uqdF4T%2BF9ynodq01vGgwgVBEjHojc4OKOfr1oW5b%2FtGVV59%2BOBVI1hqIKHRG0Ed4SWmp%2BLd1hazGuZPvp52szmegnOj5qr3ubppnKL242bX%2FuAnQKzKK0HpwolqXjsuEeFeM85lxhqHV%2B1BJqaqSHHDa0HUMLZistMRshRlntuchcFQCR6HBa2c8PSnhpVC31zMzvYMfKsI12h4HB6l%2FudrmNrvmH4LmNpi4dZFcio21DzKj%2FRjWmxjH7l8egDyG%2FIgPMY6Ls4IiN7aR1jijYTrBCgPUUHets3BFvqLzHtPFnG3B7%2FYRPnhCLu%2FgzvKN3F8l38KqeTNMHJaxkuhCvEjpFB2SJbi2QZqZZbLj3xASqXoogzbsyPp0Tzp0tH7EKDhPA7H6wwiZukXfFhhlYzP8on9fO2Ajz%2F%2BTDkDjbfWw4KNJ0cFeDsGrUspqQZb5TAKlUge7iOZEc2TZ5uagatSy9Mg08E4nImBSE5QUHDc7Daya1gyqrETMDZBBUHH2RFkGA9qMpEtNrtJ9G%2BPedz%2FpPY1hh9OCp9Pg1BrX97l3SfVzlAMRfNibhywq6qnE35rVnZi%2BEQ1UgBjs9jD%2FQrW49%2FaD0oUDojVeuFFryzRnQxDbKtYgonRcItTvLT5Y0xaK9P0u6H1197%2FMk3XxmjD9%2Fb%2BvBjqxAQWWkKiIxpC1oHEWK9Jt8UdJ39xszDBGpBqjB6Tvt5ePAXSyX8np%2FrBi%2BAPx06O0%2Ba7pU4NmH800EVXxxhgfj9nMw3CeoUIdxorVKtU2Mxw%2FLaAiPgxPS4rqkt65NF7eQYfegcSYDTm2Z%2BHPbz9HfCaVZ28Zqeko6sR%2F29ML4bguqVvHAM4mWPLNDXH33mjG%2BuzLi8e1BF7tNveg2X9G%2FRdcMkojwKYbu6xN3M6aX2alQg%3D%3D&X-Amz-SignedHeaders=host&X-Amz-Signature=5e2c0d4b4de40373ac0fe91908c2659141a6dd4ab850271cc26042a3885c82ea)\n\n## Note\nThis report was originally reported to GitHub bug bounty program, they asked me to report it to you a month ago",
            "severity": "medium",
            "identifiers": [
                {
                    "value": "GHSA-f5x3-32g6-xq36",
                    "type": "GHSA"
                },
                {
                    "value": "CVE-2024-28863",
                    "type": "CVE"
                }
            ],
            "references": [
                {
                    "url": "https://github.com/isaacs/node-tar/security/advisories/GHSA-f5x3-32g6-xq36"
                },
                {
                    "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-28863"
                },
                {
                    "url": "https://github.com/isaacs/node-tar/commit/fe8cd57da5686f8695415414bda49206a545f7f7"
                },
                {
                    "url": "https://security.netapp.com/advisory/ntap-20240524-0005"
                },
                {
                    "url": "https://github.com/advisories/GHSA-f5x3-32g6-xq36"
                }
            ],
            "published_at": "2024-03-22T16:57:05Z",
            "updated_at": "2024-06-10T18:30:53Z",
            "withdrawn_at": null,
            "vulnerabilities": [
                {
                    "package": {
                        "ecosystem": "npm",
                        "name": "node-tar"
                    },
                    "severity": "medium",
                    "vulnerable_version_range": "< 6.2.1",
                    "first_patched_version": {
                        "identifier": "6.2.1"
                    }
                },
                {
                    "package": {
                        "ecosystem": "npm",
                        "name": "tar"
                    },
                    "severity": "medium",
                    "vulnerable_version_range": "< 6.2.1",
                    "first_patched_version": {
                        "identifier": "6.2.1"
                    }
                }
            ],
            "cvss": {
                "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:H",
                "score": 6.5
            },
            "cwes": [
                {
                    "cwe_id": "CWE-400",
                    "name": "Uncontrolled Resource Consumption"
                }
            ]
        },
        "security_vulnerability": {
            "package": {
                "ecosystem": "npm",
                "name": "tar"
            },
            "severity": "medium",
            "vulnerable_version_range": "< 6.2.1",
            "first_patched_version": {
                "identifier": "6.2.1"
            }
        },
        "url": "https://api.github.com/repos/username/catboost/dependabot/alerts/4",
        "html_url": "https://github.com/username/catboost/security/dependabot/4",
        "created_at": "2024-05-20T17:41:51Z",
        "updated_at": "2024-05-20T17:41:51Z",
        "dismissed_at": null,
        "dismissed_by": null,
        "dismissed_reason": null,
        "dismissed_comment": null,
        "fixed_at": null,
        "auto_dismissed_at": null
    },
    {
        "number": 3,
        "state": "open",
        "dependency": {
            "package": {
                "ecosystem": "npm",
                "name": "postcss"
            },
            "manifest_path": "catboost/python-package/catboost/widget/js/yarn.lock",
            "scope": "runtime"
        },
        "security_advisory": {
            "ghsa_id": "GHSA-7fh5-64p2-3v2j",
            "cve_id": "CVE-2023-44270",
            "summary": "PostCSS line return parsing error",
            "description": "An issue was discovered in PostCSS before 8.4.31. It affects linters using PostCSS to parse external Cascading Style Sheets (CSS). There may be `\\r` discrepancies, as demonstrated by `@font-face{ font:(\\r/*);}` in a rule.\n\nThis vulnerability affects linters using PostCSS to parse external untrusted CSS. An attacker can prepare CSS in such a way that it will contains parts parsed by PostCSS as a CSS comment. After processing by PostCSS, it will be included in the PostCSS output in CSS nodes (rules, properties) despite being originally included in a comment.",
            "severity": "medium",
            "identifiers": [
                {
                    "value": "GHSA-7fh5-64p2-3v2j",
                    "type": "GHSA"
                },
                {
                    "value": "CVE-2023-44270",
                    "type": "CVE"
                }
            ],
            "references": [
                {
                    "url": "https://nvd.nist.gov/vuln/detail/CVE-2023-44270"
                },
                {
                    "url": "https://github.com/postcss/postcss/commit/58cc860b4c1707510c9cd1bc1fa30b423a9ad6c5"
                },
                {
                    "url": "https://github.com/postcss/postcss/blob/main/lib/tokenize.js#L25"
                },
                {
                    "url": "https://github.com/postcss/postcss/releases/tag/8.4.31"
                },
                {
                    "url": "https://github.com/github/advisory-database/issues/2820"
                },
                {
                    "url": "https://github.com/advisories/GHSA-7fh5-64p2-3v2j"
                }
            ],
            "published_at": "2023-09-30T00:31:10Z",
            "updated_at": "2023-11-05T05:05:37Z",
            "withdrawn_at": null,
            "vulnerabilities": [
                {
                    "package": {
                        "ecosystem": "npm",
                        "name": "postcss"
                    },
                    "severity": "medium",
                    "vulnerable_version_range": "< 8.4.31",
                    "first_patched_version": {
                        "identifier": "8.4.31"
                    }
                }
            ],
            "cvss": {
                "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
                "score": 5.3
            },
            "cwes": [
                {
                    "cwe_id": "CWE-74",
                    "name": "Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')"
                },
                {
                    "cwe_id": "CWE-144",
                    "name": "Improper Neutralization of Line Delimiters"
                }
            ]
        },
        "security_vulnerability": {
            "package": {
                "ecosystem": "npm",
                "name": "postcss"
            },
            "severity": "medium",
            "vulnerable_version_range": "< 8.4.31",
            "first_patched_version": {
                "identifier": "8.4.31"
            }
        },
        "url": "https://api.github.com/repos/username/catboost/dependabot/alerts/3",
        "html_url": "https://github.com/username/catboost/security/dependabot/3",
        "created_at": "2024-05-20T17:41:51Z",
        "updated_at": "2024-05-20T17:41:51Z",
        "dismissed_at": null,
        "dismissed_by": null,
        "dismissed_reason": null,
        "dismissed_comment": null,
        "fixed_at": null,
        "auto_dismissed_at": null
    },
    {
        "number": 2,
        "state": "open",
        "dependency": {
            "package": {
                "ecosystem": "npm",
                "name": "got"
            },
            "manifest_path": "catboost/python-package/catboost/widget/js/yarn.lock",
            "scope": "runtime"
        },
        "security_advisory": {
            "ghsa_id": "GHSA-pfrx-2q88-qq97",
            "cve_id": "CVE-2022-33987",
            "summary": "Got allows a redirect to a UNIX socket",
            "description": "The got package before 11.8.5 and 12.1.0 for Node.js allows a redirect to a UNIX socket.",
            "severity": "medium",
            "identifiers": [
                {
                    "value": "GHSA-pfrx-2q88-qq97",
                    "type": "GHSA"
                },
                {
                    "value": "CVE-2022-33987",
                    "type": "CVE"
                }
            ],
            "references": [
                {
                    "url": "https://nvd.nist.gov/vuln/detail/CVE-2022-33987"
                },
                {
                    "url": "https://github.com/sindresorhus/got/pull/2047"
                },
                {
                    "url": "https://github.com/sindresorhus/got/compare/v12.0.3...v12.1.0"
                },
                {
                    "url": "https://github.com/sindresorhus/got/commit/861ccd9ac2237df762a9e2beed7edd88c60782dc"
                },
                {
                    "url": "https://github.com/sindresorhus/got/releases/tag/v11.8.5"
                },
                {
                    "url": "https://github.com/sindresorhus/got/releases/tag/v12.1.0"
                },
                {
                    "url": "https://github.com/advisories/GHSA-pfrx-2q88-qq97"
                }
            ],
            "published_at": "2022-06-19T00:00:21Z",
            "updated_at": "2023-01-27T05:05:01Z",
            "withdrawn_at": null,
            "vulnerabilities": [
                {
                    "package": {
                        "ecosystem": "npm",
                        "name": "got"
                    },
                    "severity": "medium",
                    "vulnerable_version_range": ">= 12.0.0, < 12.1.0",
                    "first_patched_version": {
                        "identifier": "12.1.0"
                    }
                },
                {
                    "package": {
                        "ecosystem": "npm",
                        "name": "got"
                    },
                    "severity": "medium",
                    "vulnerable_version_range": "< 11.8.5",
                    "first_patched_version": {
                        "identifier": "11.8.5"
                    }
                }
            ],
            "cvss": {
                "vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N",
                "score": 5.3
            },
            "cwes": []
        },
        "security_vulnerability": {
            "package": {
                "ecosystem": "npm",
                "name": "got"
            },
            "severity": "medium",
            "vulnerable_version_range": "< 11.8.5",
            "first_patched_version": {
                "identifier": "11.8.5"
            }
        },
        "url": "https://api.github.com/repos/username/catboost/dependabot/alerts/2",
        "html_url": "https://github.com/username/catboost/security/dependabot/2",
        "created_at": "2024-05-20T17:41:51Z",
        "updated_at": "2024-05-20T17:41:51Z",
        "dismissed_at": null,
        "dismissed_by": null,
        "dismissed_reason": null,
        "dismissed_comment": null,
        "fixed_at": null,
        "auto_dismissed_at": null
    },
    {
        "number": 1,
        "state": "open",
        "dependency": {
            "package": {
                "ecosystem": "pip",
                "name": "tqdm"
            },
            "manifest_path": "catboost/benchmarks/training_speed/requirements.txt",
            "scope": "runtime"
        },
        "security_advisory": {
            "ghsa_id": "GHSA-g7vv-2v7x-gj9p",
            "cve_id": "CVE-2024-34062",
            "summary": "tqdm CLI arguments injection attack",
            "description": "### Impact\nAny optional non-boolean CLI arguments (e.g. `--delim`, `--buf-size`, `--manpath`) are passed through python's `eval`, allowing arbitrary code execution. Example:\n\n```sh\npython -m tqdm --manpath=\"\\\" + str(exec(\\\"import os\\nos.system('echo hi && killall python3')\\\")) + \\\"\"\n```\n\n### Patches\nhttps://github.com/tqdm/tqdm/commit/4e613f84ed2ae029559f539464df83fa91feb316 released in `tqdm>=4.66.3`\n\n### Workarounds\nNone\n\n### References\n- https://github.com/tqdm/tqdm/releases/tag/v4.66.3",
            "severity": "low",
            "identifiers": [
                {
                    "value": "GHSA-g7vv-2v7x-gj9p",
                    "type": "GHSA"
                },
                {
                    "value": "CVE-2024-34062",
                    "type": "CVE"
                }
            ],
            "references": [
                {
                    "url": "https://github.com/tqdm/tqdm/security/advisories/GHSA-g7vv-2v7x-gj9p"
                },
                {
                    "url": "https://nvd.nist.gov/vuln/detail/CVE-2024-34062"
                },
                {
                    "url": "https://github.com/tqdm/tqdm/commit/4e613f84ed2ae029559f539464df83fa91feb316"
                },
                {
                    "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/PA3GIGHPWAHCTT4UF57LTPZGWHAX3GW6"
                },
                {
                    "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QRECVQCCESHBS3UJOWNXQUIX725TKNY6"
                },
                {
                    "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VA337CYUS4SLRFV2P6MX6MZ2LKFURKJC"
                },
                {
                    "url": "https://github.com/advisories/GHSA-g7vv-2v7x-gj9p"
                }
            ],
            "published_at": "2024-05-03T19:33:28Z",
            "updated_at": "2024-06-10T18:30:58Z",
            "withdrawn_at": null,
            "vulnerabilities": [
                {
                    "package": {
                        "ecosystem": "pip",
                        "name": "tqdm"
                    },
                    "severity": "low",
                    "vulnerable_version_range": ">= 4.4.0, < 4.66.3",
                    "first_patched_version": {
                        "identifier": "4.66.3"
                    }
                }
            ],
            "cvss": {
                "vector_string": "CVSS:3.1/AV:L/AC:L/PR:L/UI:R/S:U/C:L/I:L/A:N",
                "score": 3.9
            },
            "cwes": [
                {
                    "cwe_id": "CWE-74",
                    "name": "Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')"
                }
            ]
        },
        "security_vulnerability": {
            "package": {
                "ecosystem": "pip",
                "name": "tqdm"
            },
            "severity": "low",
            "vulnerable_version_range": ">= 4.4.0, < 4.66.3",
            "first_patched_version": {
                "identifier": "4.66.3"
            }
        },
        "url": "https://api.github.com/repos/username/catboost/dependabot/alerts/1",
        "html_url": "https://github.com/username/catboost/security/dependabot/1",
        "created_at": "2024-05-20T17:41:51Z",
        "updated_at": "2024-05-20T17:41:51Z",
        "dismissed_at": null,
        "dismissed_by": null,
        "dismissed_reason": null,
        "dismissed_comment": null,
        "fixed_at": null,
        "auto_dismissed_at": null
    }
]